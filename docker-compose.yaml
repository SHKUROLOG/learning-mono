version: '3.8'
services:
  frontend:
    image: frontend
    build:
      args:
        - NODE_ENV=production
        - VITE_SERVER_URL=http://localhost:3030
      context: .
      dockerfile: packages/frontend/Dockerfile
    ports:
      - "8080:80"

  migrations: 
    image: migrations
    build:
      args:
        - NODE_ENV=production
      context: ./packages/backend
      dockerfile: ./Dockerfile.migrations
    environment:
      - DATABASE_URL=postgres://user:pass@db:5432/prod?schema=learning
    
  backend:
    image: backend
    build:
      args:
        - NODE_ENV=production
        - CLIENT_URL=http://localhost:8080
        - DATABASE_URL=postgres://user:pass@db:5432/prod?schema=learning
      context: .
      dockerfile: packages/backend/Dockerfile
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgres://user:pass@db:5432/prod?schema=learning
      - CLIENT_URL=http://localhost:8080
    ports:
      - '3030:3030'
    links: 
      - 'db'

  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d prod" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - '5432:5432'
    volumes:
      - './.data/db:/var/lib/postgresql/data'

  db-admin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    ports:
      - '5050:80'
    volumes:
      - './.data/db-admin:/var/lib/pgadmin'
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@mail.ru
      - PGADMIN_DEFAULT_PASSWORD=pass
    links:
      - 'db'